name: Test, Build, and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-18.04
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install Yarn
        run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn test
  version:
    needs: [tests]
    runs-on: ubuntu-latest
    if: github.repository_owner == 'zachywheeler' && github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, '[RELEASE]')
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - run: git config --global user.name 'Auto Increment'
      - run: git config --global user.email 'auto.increment@example.com'
      - run: npm version patch -m "[RELEASE] %s"
      - run: git push
  package:
    runs-on: ubuntu-18.04
    if: github.repository_owner == 'zachywheeler' && startsWith(github.event.head_commit.message, '[RELEASE]')
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install Yarn
        run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn pack
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: "*.tgz"
  publish:
    name: "Publish to GitHub Packages"
    needs: [package]
    runs-on: ubuntu-18.04
    if: github.repository_owner == 'zachywheeler'
    steps:
    - name: Download
      uses: actions/download-artifact@v3
      with:
          name: package
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
        registry-url: https://npm.pkg.github.com/
        scope: "@zachywheeler"
        always-auth: true
    - run: npm publish $(ls *.tgz)
      env:
        NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
